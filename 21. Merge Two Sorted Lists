# Definition for singly-linked list.
# class ListNode(object):
#     def __init__(self, x):
#         self.val = x
#         self.next = None

class Solution(object):
    def mergeTwoLists(self, l1, l2):
        """
        :type l1: ListNode
        :type l2: ListNode
        :rtype: ListNode
        """
        if l1==None:
            return l2
        elif l2==None:
            return l1
        else:
            p1=l1
            p2=l2
            
            if p1.val<=p2.val:
                newHead=p1
                p1=p1.next
            else:
                newHead=p2
                p2=p2.next
                
            p3=newHead
            
            while p1!=None and p2!=None:
                if p1.val<=p2.val:
                    p3.next=p1
                    p3=p3.next
                    p1=p1.next
                    
                else:
                    p3.next=p2
                    p3=p3.next
                    p2=p2.next
                    
            if p1==None:
                p3.next=p2
            else:
                p3.next=p1
            
            return newHead
